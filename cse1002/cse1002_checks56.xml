<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
          "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--
     Modification of checkstyle 5.6 "sun_checks.xml" specifically
     for use in cse1002.
-->


<!--

  Checkstyle configuration that checks the sun coding conventions from:

    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

    - some best practices

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.

  Finally, it is worth reading the documentation.

-->

<module name="Checker">
    <!--
        If you set the basedir property below, then all reported file
        names will be relative to the specified directory. See
        http://checkstyle.sourceforge.net/5.x/config.html#Checker

        <property name="basedir" value="${basedir}"/>
    -->

    <!-- Checks that a package-info.java file exists for each package.     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage -->
    <!-- Removed.  rds -->
    <!--
    <module name="JavadocPackage"/>
    -->

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <!-- lineSeparator: "system" [default] "lf" "crlf" or "cr"            -->
    <!-- BlueJ writes 'lf' even on Windows, so we need another xml file
         epecially for BlueJ.  -->
    <module name="NewlineAtEndOfFile"/>

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <!-- Removed.  rds -->
    <!--
    <module name="Translation"/>
    -->

    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module name="FileLength"/>
    
    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module name="FileTabCharacter">
      <property name="eachLine" value="false"/>
    </module>

    <!-- Miscellaneous other checks.                   -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <!--  was "\s+$", but I like to use linefeed characters -->
    <module name="RegexpSingleline">
       <property name="format" value="[ \t]\s*$"/>
       <property name="minimum" value="0"/>
       <property name="maximum" value="0"/>
       <property name="message" value="Line has trailing spaces."/>
    </module>

    <module name="TreeWalker">

        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <!-- Removed.  rds -->
        <!--
        <module name="JavadocMethod"/>
        <module name="JavadocType"/>
        <module name="JavadocVariable"/>
        <module name="JavadocStyle"/>
        -->

        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName"/>
        <!-- Added '_' rds -->
        <module name="LocalVariableName">
          <property name="format" value="^[a-z][a-zA-Z0-9_]*$"/>
        </module>
        <module name="MemberName">
          <property name="format" value="^[a-z][a-zA-Z0-9_]*$"/>
        </module>
        <module name="MethodName"/>
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>


        <!-- Checks for Headers                                -->
        <!-- See http://checkstyle.sf.net/config_header.html   -->
        <!-- <module name="Header">                            -->
            <!-- The follow property value demonstrates the ability     -->
            <!-- to have access to ANT properties. In this case it uses -->
            <!-- the ${basedir} property to allow Checkstyle to be run  -->
            <!-- from any directory within a project. See property      -->
            <!-- expansion,                                             -->
            <!-- http://checkstyle.sf.net/config.html#properties        -->
            <!-- <property                                              -->
            <!--     name="headerFile"                                  -->
            <!--     value="${basedir}/java.header"/>                   -->
        <!-- </module> -->

        <!-- Following interprets the header file as regular expressions. -->
        <!-- <module name="RegexpHeader"/>                                -->


        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="AvoidStarImport">
            <property name="excludes" value="java.io,java.util.zip,java.util.regex"/>
        </module>
        <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>


        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module name="LineLength">
            <property name="max" value="90"/>
        </module>

        <!-- This was in my 5.3 xml file.  Does it still exist? -->
        <module name="ExecutableStatementCount">
            <property name="max" value="50"/>
            <property name="severity" value="info"/>
        </module>

        <module name="MethodLength">
            <property name="max" value="100"/>
            <property name="countEmpty" value="false"/>
            <property name="severity" value="info"/>
        </module>
        <module name="ParameterNumber"/>


        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="EmptyForIteratorPad"/>
        <module name="GenericWhitespace"/>

        <!-- RDS: Require a space after the identifier of a method
                  defintion, except if '(' occurs on a new line.  -->
        <module name="MethodParamPad">
          <property name="tokens"  value="METHOD_DEF"/>
          <property name="option"  value="space"/>
          <property name="allowLineBreaks" value="true"/>
        </module>

        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <!-- The default pad policy is 'nospace'. -->
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround">
            <!-- Exempt empty constructor and method bodies "{}"
                 public MyClass() {}    // empty contructor body
                 public void func() {} // empty method body
              -->
            <property name="allowEmptyConstructors" value="true"/>
            <property name="allowEmptyMethods" value="true"/>
        </module>


        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>


        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock"/>
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>


        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <!-- Removed.  rds -->
        <!-- <module name="AvoidInlineConditionals"/>  -->
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>

        <!-- 
           FinalLocalVariable overlaps with FinalParameters!
        -->
        <!--
Adding parameters may be too onerous

 <module name="FinalLocalVariable">
    <property name="tokens" value="VARIABLE_DEF,PARAMETER_DEF"/>
</module>        

We will ingore floating point magic numbers
        -->
        
        <module name="FinalLocalVariable">
            <property name="tokens" value="VARIABLE_DEF"/>
        </module>
        <module name="HiddenField"/>
        <module name="IllegalInstantiation"/>
        <module name="InnerAssignment"/>
        <module name="MagicNumber"/>

        <module name="MagicNumber">
           <property name="tokens" value="NUM_INT, NUM_LONG"/>
        </module>
        <module name="MissingSwitchDefault"/>
<!--        <module name="RedundantThrows">
            <property name="suppressLoadErrors" value="true"/>
        </module>	-->
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <module name="DesignForExtension"/>
        <module name="FinalClass"/>
        <!--
        <module name="HideUtilityClassConstructor">
          <property name="severity" value="info"/>
        </module>
        -->
        <module name="InterfaceIsType"/>
        <!-- The default actions require accessor methods even for
             final immutable objects.
             Maybe this is best if we turn this off.
        -->
        <!--
        <module name="VisibilityModifier"/>
        -->

        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <module name="FinalParameters">
           <property name="tokens" value="METHOD_DEF,CTOR_DEF,LITERAL_CATCH"/>
        </module>
        <module name="TodoComment"/>
        <module name="UpperEll"/>

        <!-- These are added. -->

        <module name="NestedIfDepth">
            <property name="max" value="2"/>
        </module>

        <module name="NPathComplexity">
          <property name="max" value="50"/>
          <property name="severity" value="info"/>
        </module>
        <module name="JavaNCSS"/>


    </module>

</module>
